{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","currentImg","setCurrentImg","stepUp","stepDown","lastEmojiIndex","length","handleButtonClick","event","currentTarget","name","className","style","width","map","image","index","transform","transition","src","alt","type","disabled","onClick","App","state","this","value","min","max","onChange","setState","target","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f44ce7b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImg, setCurrentImg] = useState(0);\n\n  const stepUp = currentImg + step;\n  const stepDown = currentImg - step;\n  const lastEmojiIndex = images.length - frameSize;\n\n  const handleButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    if (event.currentTarget.name === 'prev') {\n      if (!infinite) {\n        setCurrentImg(\n          stepDown > 0\n            ? stepDown\n            : 0,\n        );\n      } else {\n        setCurrentImg(\n          stepDown > 0\n            ? stepDown\n            : lastEmojiIndex,\n        );\n      }\n    }\n\n    if (event.currentTarget.name === 'next') {\n      if (!infinite) {\n        setCurrentImg(\n          stepUp > lastEmojiIndex\n            ? lastEmojiIndex\n            : stepUp,\n        );\n      } else {\n        setCurrentImg(\n          stepUp > lastEmojiIndex\n            ? 0\n            : stepUp,\n        );\n      }\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${itemWidth * frameSize}px`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${-itemWidth * currentImg}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`img${index + 1}`}\n              width={`${itemWidth}px`}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        className=\"button\"\n        name=\"prev\"\n        type=\"button\"\n        disabled={!infinite && currentImg === 0}\n        onClick={(event) => {\n          handleButtonClick(event);\n        }}\n      >\n        Prev\n      </button>\n\n      <button\n        className=\"button\"\n        name=\"next\"\n        type=\"button\"\n        data-cy=\"next\"\n        disabled={\n          !infinite\n          && (images.length - frameSize) === currentImg\n        }\n        onClick={(event) => {\n          handleButtonClick(event);\n        }}\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div>\n          <label className=\"App__label\">\n            ItemWidth\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={itemWidth}\n              min={100}\n              max={300}\n              step={10}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            FrameSize\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Step\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={images.length}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            AnimationDuration\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              value={animationDuration}\n              min={500}\n              max={5000}\n              step={100}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label className=\"App__label\">\n            Infinity\n            <input\n              type=\"checkbox\"\n              onChange={(event) => {\n                this.setState({\n                  infinite: event.target.checked,\n                });\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}